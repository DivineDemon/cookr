generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comment {
  id              Int               @id @default(autoincrement())
  user_id         Int
  likes           BigInt?           @default(0)
  content         String            @db.Text
  user            user              @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "comments_ibfk_1")
  comment_replies comment_replies[]
  recipe_comments recipe_comments[]

  @@index([user_id], map: "user_id")
}

model recipe {
  id              Int               @id @default(autoincrement())
  user_id         Int
  name            String            @db.Text
  description     String?           @db.Text
  ingredients     String            @db.Text
  likes           BigInt?           @default(0)
  downloads       BigInt?           @default(0)
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  user            user              @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "recipe_ibfk_1")
  recipe_comments recipe_comments[]

  @@index([user_id], map: "user_id")
}

model user {
  id             Int              @id @default(autoincrement())
  name           String           @db.Text
  email          String           @unique(map: "email") @db.VarChar(50)
  password       String           @db.Text
  phone          String?          @db.Text
  age            Int?
  location       String?          @db.Text
  image          String?          @db.Text
  comments       comment[]
  recipe         recipe[]
  user_followers user_followers[]
}

model comment_replies {
  id         Int     @id @default(autoincrement())
  comment_id Int
  reply_id   Int
  comment    comment @relation(fields: [comment_id], references: [id], onDelete: Cascade, map: "comment_replies_ibfk_1")

  @@index([comment_id], map: "comment_id")
}

model user_followers {
  id          Int  @id @default(autoincrement())
  user_id     Int
  follower_id Int
  user        user @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "user_followers_ibfk_1")

  @@index([user_id], map: "user_id")
}

model recipe_comments {
  id         Int     @id @default(autoincrement())
  recipe_id  Int
  comment_id Int
  recipe     recipe  @relation(fields: [recipe_id], references: [id], onDelete: Cascade, map: "recipe_comments_ibfk_1")
  comment    comment @relation(fields: [comment_id], references: [id], onDelete: Cascade, map: "recipe_comments_ibfk_2")

  @@index([comment_id], map: "comment_id")
  @@index([recipe_id], map: "recipe_id")
}
