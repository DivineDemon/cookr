generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comment {
  id            Int       @id @default(autoincrement())
  user_id       Int
  recipe_id     Int
  reply_id      Int?
  likes         BigInt?   @default(0)
  content       String    @db.Text
  comment       comment?  @relation("commentTocomment", fields: [reply_id], references: [id], onDelete: Cascade, map: "comment_ibfk_1")
  other_comment comment[] @relation("commentTocomment")
  user          user      @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "comments_ibfk_1")
  recipe        recipe    @relation(fields: [recipe_id], references: [id], onDelete: Cascade, map: "comments_ibfk_2")

  @@index([recipe_id], map: "recipe_id")
  @@index([user_id], map: "user_id")
  @@index([reply_id], map: "reply_id")
}

model recipe {
  id          Int       @id @default(autoincrement())
  user_id     Int
  name        String    @db.Text
  description String?   @db.Text
  ingredients String    @db.Text
  likes       BigInt?   @default(0)
  downloads   BigInt?   @default(0)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  comments    comment[]
  user        user      @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "recipe_ibfk_1")

  @@index([user_id], map: "user_id")
}

model user {
  id       Int       @id @default(autoincrement())
  name     String    @db.Text
  email    String    @unique(map: "email") @db.VarChar(50)
  password String    @db.Text
  phone    String?   @db.Text
  age      Int?
  location String?   @db.Text
  image    String?   @db.Text
  comments comment[]
  recipe   recipe[]
}
